@use 'sass:math';
/* Define all colours */
$color:#999999;
$n : 4;//кол-вo изображений ($n).
$time_delay:calc(30 / $n ); // Max=99 it's too fast, min=0 .
$width:50vh;

:root{
  --color:#111111;
  --time_animation:8s;
  --time_animation_wrapper:8s;
}

.content__wrapper{
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 10vh;
    }
    .title{
      position: absolute;
      z-index: 100;
      bottom: 1%;
      font-size: 45pt;
      color: #FAF8C6;
      text-shadow: 1px 0 1px #000, 
      0 1px 1px #000, 
      -1px 0 1px #000, 
      0 -1px 1px #000;
    }
    .bg_image{
      background-image: url(../../../files/images/imagesForSliders/circleSlider/forest.jpg);
      background-color: greenyellow;
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      z-index: -1;
    }
    .gallery{
    
      display: grid;
      width: $width;
      aspect-ratio: 1;
      padding: calc($width / 20);
      border-radius: 50%;
      overflow: hidden;
      position: relative;
    
      &::after{
        content: "";
        position: absolute;
        inset: 0;
        padding: inherit;
        border-radius: 50%;
        background: repeating-conic-gradient(#789048 0 30deg, #DFBA69 0 60deg);
        mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
        mask-composite: exclude;
        -webkit-mask: 
        linear-gradient(#fff 0 0) content-box, 
        linear-gradient(#fff 0 0);
        -webkit-mask-composite: xor;
        animation: rotateImages var(--time_animation_wrapper) infinite  cubic-bezier(.5, -0.3, .5, 1.3);
      }
    }
    
    .gallery > img{
      grid-area: 1/1;
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: inherit;
      animation: rotateImages var(--time_animation) infinite cubic-bezier(.5, -0.2, .5, 1.2); 
      transform-origin: 50% calc(50% / math.sin( calc(180deg / $n) ) + 50%);
      @for $i from 2 to ($n + 1){
        &:nth-child(#{$i}){
          animation-delay: calc((1 - $i) / $n * var(--time_animation));
        }
      }
    }
    
    @keyframes rotateImages{
      #{ calc($time_delay / 2) }%  {transform: rotate(0);}
      @for $i from 1 to $n {
        #{ calc( $i * 100  / $n - $time_delay / 2)}% , #{calc($i * 100  / $n + $time_delay / 2)}%   {transform: rotate( #{calc($i / $n) * -360}deg );}
      }
      #{calc(100 - $time_delay / 2)}% ,
      100% {transform: rotate(-360deg);}
    }